name: Release to GCP

on:
  workflow_dispatch:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

env:
  PROJECT_ID: agile-420314
  REGION: europe-west1
  GAR_LOCATION: europe-west1-docker.pkg.dev/agile-420314/personal-project
  IMAGE_NAME: agile_automate

jobs:
  build-push-artifact:
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@v3'

      - id: 'Authentication'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.SERVICE_ACCOUNT_KEY }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'

      - name: 'Use gcloud CLI'
        run: 'gcloud info'

      - name: Docker auth
        run: |-
          gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev
        # gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet

      - name: Docker test login
        run: docker system info | grep -E 'Username|Registry'
        working-directory: .

      # - name: Docker login
      #   run: echo '${{ secrets.SERVICE_ACCOUNT_KEY }}' | docker login -u oauth2accesstoken --password-stdin ${{ env.REGION }}-docker.pkg.dev
      #   working-directory: .

      # - name: Docker test login
      #   run: docker system info | grep -E 'Username|Registry'
      #   working-directory: .

      # - name: 'Build image'
      #   run: docker build . --tag ${{ env.GAR_LOCATION }}/${{ env.IMAGE_NAME }} --build-arg='NODE_ENV=dev'
      #   working-directory: .

      # - name: 'Push image'
      #   run: docker push ${{ env.GAR_LOCATION }}/${{ env.IMAGE_NAME }}

      # - name: Extract version and set it to TAG env var
      #   run: |
      #     echo "TAG=$(jq -r '.version' package.json)" >> $GITHUB_ENV
      # - name: Get tag
      #   id: get-tag
      #   run: echo ::set-output name=short_ref::${GITHUB_REF#refs/*/}

      - id: docker-build-push-tagged
        name: Build and Tag Docker image and push to Google Artifact Registry
        uses: docker/build-push-action@v2
        with:
          context: .
          build-args: NODE_ENV=dev
          tags: |
            ${{ env.GAR_LOCATION }}/${{ env.IMAGE_NAME }}:latest
          # ${{ env.GAR_LOCATION }}/${{ env.IMAGE_NAME }}:${{ steps.get-tag.outputs.short_ref }}
          # ${{ env.GAR_LOCATION }}/${{ env.IMAGE_NAME }}:$GITHUB_ENV
          push: true
          # cache-from: type=gha
          # cache-to: type=gha,mode=max
